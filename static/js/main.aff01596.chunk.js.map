{"version":3,"sources":["components/FeedbackOptions/FeedBackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js","components/FeedbackOptions/FeedBackOptions.module.css","components/Statistics/Statistics.module.css"],"names":["FeedBackOptions","options","onLeaveFeedback","map","option","className","s","buttons","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistics","Section","title","children","Notification","message","App","state","handleIncrement","name","setState","prevState","Math","round","Object","keys","this","isShowStatistics","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gRA0BeA,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEC,UAAWC,IAAEC,QACbC,KAAK,SAELC,QAAS,kBAAMP,EAAgBE,IAJjC,SAMGA,GAHIA,S,gBCaAM,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIV,UAAWC,IAAEU,WAAjB,UACE,wCAAWL,KACX,2CAAcC,KACd,wCAAWC,KACX,yCAAYC,KACZ,uDAA0BC,SCMjBE,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCIQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,+BAAOA,KCEKC,E,4MACnBC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,gBAAkB,SAACC,GACjB,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAOE,EAAUF,GAAQ,O,EAI9BX,MAAQ,WACN,OAAO,EAAKS,MAAMZ,KAAO,EAAKY,MAAMV,IAAM,EAAKU,MAAMX,S,EAGvDG,mBAAqB,WACnB,IAAMD,EAAQ,EAAKA,QACnB,OAAOc,KAAKC,MAAyB,IAAlB,EAAKN,MAAMZ,KAAcG,I,4CAG9C,WACE,IAAMb,EAAU6B,OAAOC,KAAKC,KAAKT,OAC3BU,EAAmBD,KAAKlB,MAC9B,OACE,qCACE,cAAC,EAAD,CAASI,MAAM,wBAAf,SACE,cAAC,EAAD,CACEjB,QAASA,EACTC,gBAAiB8B,KAAKR,oBAG1B,cAAC,EAAD,CAASN,MAAM,aAAf,SACGe,EACC,cAAC,EAAD,CACEtB,KAAMqB,KAAKT,MAAMZ,KACjBC,QAASoB,KAAKT,MAAMX,QACpBC,IAAKmB,KAAKT,MAAMV,IAChBC,MAAOkB,KAAKlB,QACZC,mBAAoBiB,KAAKjB,uBAG3B,cAAC,EAAD,CAAcM,QAAQ,+B,GA3CDa,aCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,QAAU,mC,kBCA5BD,EAAOC,QAAU,CAAC,WAAa,kC","file":"static/js/main.aff01596.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./FeedBackOptions.module.css\";\n\nconst FeedBackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map((option) => (\n        <button\n          className={s.buttons}\n          type=\"button\"\n          key={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </>\n  );\n};\n\nFeedBackOptions.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedBackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className={s.statistics}>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li> Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive Percentage: {positivePercentage}</li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return <span>{message}</span>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { Component } from \"react\";\nimport FeedBackOptions from \"./components/FeedbackOptions/FeedBackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = (name) => {\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  total = () => {\n    return this.state.good + this.state.bad + this.state.neutral;\n  };\n\n  positivePercentage = () => {\n    const total = this.total();\n    return Math.round((this.state.good * 100) / total);\n  };\n\n  render() {\n    const options = Object.keys(this.state);\n    const isShowStatistics = this.total;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedBackOptions\n            options={options}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {isShowStatistics ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.total()}\n              positivePercentage={this.positivePercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedBackOptions_buttons__296hl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__24cc8\"};"],"sourceRoot":""}